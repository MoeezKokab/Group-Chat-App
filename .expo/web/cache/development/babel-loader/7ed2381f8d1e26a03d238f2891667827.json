{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Input, Icon, Button } from 'react-native-elements';\nimport { auth, db } from \"./firebase1\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUp = function SignUp(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setname = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mail = _useState4[0],\n      setMail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      photoURL = _useState8[0],\n      setPhotoURL = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      secureText = _useState10[0],\n      setSecureText = _useState10[1];\n\n  var photoFromGallary = function photoFromGallary() {\n    var result, newfile;\n    return _regeneratorRuntime.async(function photoFromGallary$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"yes\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              quality: 1\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              newfile = {\n                uri: result.uri,\n                type: \"test/\" + result.uri.split(\".\")[1],\n                name: \"test\" + result.uri.split(\".\")[1]\n              };\n              uploadHandler(newfile);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var photoFromCamera = function photoFromCamera() {\n    var result, newfile;\n    return _regeneratorRuntime.async(function photoFromCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              newfile = {\n                uri: result.uri,\n                type: \"test/\" + result.uri.split(\".\")[1],\n                name: \"test\" + result.uri.split(\".\")[1]\n              };\n              uploadHandler(newfile);\n              console.log(newfile);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var photoFromCamera1 = function photoFromCamera1() {\n    var result, newfile;\n    return _regeneratorRuntime.async(function photoFromCamera1$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context3.sent;\n\n            if (!result.cancelled) {\n              newfile = {\n                uri: result.uri,\n                type: \"test/\" + result.uri.split(\".\")[1],\n                name: \"test\" + result.uri.split(\".\")[1]\n              };\n              uploadHandler(newfile);\n              console.log(newfile);\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openCamera = function openCamera() {\n    var permissionResult, result;\n    return _regeneratorRuntime.async(function openCamera$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            permissionResult = _context4.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context4.next = 6;\n              break;\n            }\n\n            alert(\"You've refused to allow this appp to access your camera!\");\n            return _context4.abrupt(\"return\");\n\n          case 6:\n            _context4.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            result = _context4.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setPhotoURL(result.uri);\n              console.log(result.uri);\n            }\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadHandler = function uploadHandler(image) {\n    console.log(\"yes\");\n    var data = new FormData();\n    data.append('file', image);\n    data.append(\"upload_preset\", \"employeeApp\");\n    data.append(\"clound_name\", \"dvrzs9jem\");\n    fetch(\"https://api.cloudinary.com/v1_1/dvrzs9jem/image/upload\", {\n      method: 'post',\n      body: data\n    }).then(function (res) {\n      return res.json();\n    }).then(function (dt) {\n      console.log(dt);\n      setPhotoURL(dt.url);\n    }).catch(function (err) {\n      console.log(err);\n      Alert.alert(\"some thing is wrong\");\n    });\n  };\n\n  var signup = function signup() {\n    auth.createUserWithEmailAndPassword(mail, password).then(function (userCredential) {\n      var user = userCredential.user;\n      user.updateProfile({\n        displayName: name,\n        photoURL: photoURL ? photoURL : \"https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\n      }).then(function () {}).catch(function (error) {});\n      props.navigation.popToTop();\n    }).catch(function (error) {\n      var errorMessage = error.message;\n      alert(errorMessage);\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Input, {\n      label: \"Name\",\n      value: name,\n      placeholder: \"User name\",\n      leftIcon: _jsx(Icon, {\n        type: \"material\",\n        name: \"badge\"\n      }),\n      onChangeText: function onChangeText(txt) {\n        setname(txt);\n      }\n    }), _jsx(Input, {\n      label: \"Mail\",\n      value: mail,\n      placeholder: \"User mail\",\n      leftIcon: _jsx(Icon, {\n        type: \"material\",\n        name: \"email\"\n      }),\n      onChangeText: function onChangeText(txt) {\n        return setMail(txt);\n      }\n    }), _jsx(Input, {\n      label: \"Password\",\n      value: password,\n      placeholder: \"password\",\n      secureTextEntry: secureText,\n      Icon: _jsx(Text, {\n        children: \"Show\"\n      }),\n      leftIcon: _jsx(Icon, {\n        type: \"material\",\n        name: \"lock\",\n        size: 24,\n        color: \"black\"\n      }),\n      rightIcon: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log(secureText);\n          setSecureText(!secureText);\n        },\n        children: secureText ? _jsx(Text, {\n          children: \"show\"\n        }) : _jsx(Text, {\n          children: \"hide\"\n        })\n      }),\n      onChangeText: function onChangeText(txt) {\n        setPassword(txt);\n      }\n    }), _jsx(Input, {\n      label: \"Profile\",\n      value: photoURL,\n      placeholder: \"User Profile\",\n      leftIcon: _jsx(Icon, {\n        type: \"material\",\n        name: \"add-a-photo\"\n      }),\n      onChangeText: function onChangeText(txt) {\n        return setPhotoURL(txt);\n      }\n    }), _jsx(Button, {\n      title: \"Sign Up\",\n      buttonStyle: {\n        backgroundColor: 'rgba(39, 39, 39, 1)'\n      },\n      containerStyle: {\n        width: 200,\n        marginHorizontal: 85,\n        marginVertical: 10\n      },\n      titleStyle: {\n        color: 'white',\n        marginHorizontal: 20\n      },\n      onPress: signup\n    }), _jsx(Button, {\n      title: \"camera\",\n      buttonStyle: {\n        backgroundColor: 'rgba(39, 39, 39, 1)'\n      },\n      containerStyle: {\n        width: 200,\n        marginHorizontal: 85,\n        marginVertical: 10\n      },\n      titleStyle: {\n        color: 'white',\n        marginHorizontal: 20\n      },\n      onPress: photoFromCamera\n    }), _jsx(Button, {\n      title: \"Gallary\",\n      buttonStyle: {\n        backgroundColor: 'rgba(39, 39, 39, 1)'\n      },\n      containerStyle: {\n        width: 200,\n        marginHorizontal: 85,\n        marginVertical: 10\n      },\n      titleStyle: {\n        color: 'white',\n        marginHorizontal: 20\n      },\n      onPress: photoFromGallary\n    })]\n  });\n};\n\nexport default SignUp;","map":{"version":3,"sources":["G:/React native/chatApp/Screens/SignUp.js"],"names":["React","useState","Input","Icon","Button","auth","db","ImagePicker","SignUp","props","name","setname","mail","setMail","password","setPassword","photoURL","setPhotoURL","secureText","setSecureText","photoFromGallary","console","log","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","quality","result","cancelled","newfile","uri","type","split","uploadHandler","photoFromCamera","launchCameraAsync","photoFromCamera1","aspect","openCamera","requestMediaLibraryPermissionsAsync","permissionResult","granted","alert","image","data","FormData","append","fetch","method","body","then","res","json","dt","url","catch","err","Alert","signup","createUserWithEmailAndPassword","userCredential","user","updateProfile","displayName","error","navigation","popToTop","errorMessage","message","txt","backgroundColor","width","marginHorizontal","marginVertical","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, TouchableOpacity,Alert } from 'react-native'\r\nimport { Input, Icon, Button } from 'react-native-elements'\r\nimport { auth, db } from './firebase1'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nconst SignUp = (props) => {\r\n    const [name, setname] = useState('')\r\n    const [mail, setMail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [photoURL, setPhotoURL] = useState('')\r\n    const [secureText, setSecureText] = useState(true)\r\n\r\n\r\n\r\n    const photoFromGallary = async () => {\r\n        console.log(\"yes\")\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            allowsEditing: true,\r\n            //aspect: [4, 3],\r\n            quality: 1,\r\n        })\r\n        if (!result.cancelled) {\r\n            let newfile = {\r\n                uri: result.uri,\r\n                type: `test/${result.uri.split(\".\")[1]}`,\r\n                name: `test${result.uri.split(\".\")[1]}`\r\n            }\r\n            uploadHandler(newfile)\r\n            // setModal(false)\r\n        }\r\n    }\r\n    const photoFromCamera = async () => {\r\n        let result = await ImagePicker.launchCameraAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            allowsEditing: true,\r\n            //aspect: [4, 3],\r\n            quality: 1,\r\n        })\r\n        if (!result.cancelled) {\r\n            let newfile = {\r\n                uri: result.uri,\r\n                type: `test/${result.uri.split(\".\")[1]}`,\r\n                name: `test${result.uri.split(\".\")[1]}`\r\n            }\r\n            uploadHandler(newfile)\r\n            console.log(newfile)\r\n            // setModal(false)\r\n        }\r\n    }\r\n    const photoFromCamera1 = async () => {\r\n        let result = await ImagePicker.launchCameraAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        })\r\n        if (!result.cancelled) {\r\n            let newfile = {\r\n                uri: result.uri,\r\n                type: `test/${result.uri.split(\".\")[1]}`,\r\n                name: `test${result.uri.split(\".\")[1]}`\r\n            }\r\n            uploadHandler(newfile)\r\n            console.log(newfile)\r\n            // setModal(false)\r\n        }\r\n    }\r\n    const openCamera = async () => {\r\n        // Ask the user for the permission to access the camera\r\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync()\r\n    \r\n        if (permissionResult.granted === false) {\r\n          alert(\"You've refused to allow this appp to access your camera!\");\r\n          return;\r\n        }\r\n    \r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n    \r\n        // Explore the result\r\n        console.log(result);\r\n    \r\n        if (!result.cancelled) {\r\n         // setPickedImagePath(result.uri);\r\n          setPhotoURL(result.uri)\r\n          console.log(result.uri);\r\n        }\r\n      }\r\n    const uploadHandler = image => {\r\n        console.log(\"yes\")\r\n        const data = new FormData()\r\n        data.append('file', image)\r\n        data.append(\"upload_preset\", \"employeeApp\")\r\n        data.append(\"clound_name\", \"dvrzs9jem\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/dvrzs9jem/image/upload\", {\r\n            method: 'post',\r\n            body: data\r\n        }).then(res => res.json())\r\n            .then((dt) => {\r\n                console.log(dt)\r\n                setPhotoURL(dt.url)\r\n\r\n\r\n            }).catch(err => {\r\n                console.log(err)\r\n                Alert.alert(\"some thing is wrong\")\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    const signup = () => {\r\n        auth.createUserWithEmailAndPassword(mail, password)\r\n            .then((userCredential) => {\r\n                // Signed in \r\n                var user = userCredential.user;\r\n                //const user = firebase.auth().currentUser;\r\n\r\n                user.updateProfile({\r\n                    displayName: name,\r\n                    photoURL: photoURL ? photoURL : \"https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n                }).then(() => {\r\n                    //props.navigation.replace(\"chat\")\r\n                    // Update successful\r\n                    // ...\r\n                }).catch((error) => {\r\n                    // An error occurred\r\n                    // ...\r\n                });\r\n                props.navigation.popToTop()\r\n            })\r\n            .catch((error) => {\r\n\r\n                var errorMessage = error.message;\r\n                alert(errorMessage)\r\n                // ..\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <View>\r\n            <Input\r\n                label=\"Name\"\r\n                value={name}\r\n                placeholder='User name'\r\n                leftIcon={\r\n                    <Icon\r\n                        type='material'\r\n                        name='badge'\r\n\r\n                    />\r\n                }\r\n                onChangeText={txt => { setname(txt) }}\r\n            />\r\n            <Input\r\n                label=\"Mail\"\r\n                value={mail}\r\n                placeholder='User mail'\r\n                leftIcon={\r\n                    <Icon\r\n                        type='material'\r\n                        name='email'\r\n\r\n                    />\r\n                }\r\n                onChangeText={txt => setMail(txt)}\r\n            />\r\n            <Input\r\n                label=\"Password\"\r\n                value={password}\r\n                placeholder='password'\r\n                secureTextEntry={secureText}\r\n                Icon={\r\n                    <Text>Show</Text>\r\n                }\r\n                leftIcon={\r\n\r\n                    <Icon\r\n\r\n                        type='material'\r\n                        name='lock'\r\n                        size={24}\r\n                        color='black'\r\n                    />\r\n                }\r\n                rightIcon={\r\n                    <TouchableOpacity onPress={() => {\r\n                        console.log(secureText)\r\n                        setSecureText(!secureText)\r\n                    }}>\r\n                        {secureText ?\r\n                            <Text>show</Text> :\r\n                            <Text>hide</Text>\r\n                        }\r\n                    </TouchableOpacity>\r\n                }\r\n                onChangeText={txt => { setPassword(txt) }}\r\n            />\r\n            <Input\r\n                label=\"Profile\"\r\n                value={photoURL}\r\n                placeholder='User Profile'\r\n                leftIcon={\r\n                    <Icon\r\n                        type='material'\r\n                        name='add-a-photo'\r\n\r\n                    />\r\n                }\r\n                onChangeText={txt => setPhotoURL(txt)}\r\n            />\r\n            <Button\r\n                title=\"Sign Up\"\r\n                buttonStyle={{ backgroundColor: 'rgba(39, 39, 39, 1)' }}\r\n                containerStyle={{\r\n                    width: 200,\r\n                    marginHorizontal: 85,\r\n                    marginVertical: 10,\r\n                }}\r\n                titleStyle={{ color: 'white', marginHorizontal: 20 }}\r\n                onPress={signup}\r\n            />\r\n              <Button\r\n                title=\"camera\"\r\n                buttonStyle={{ backgroundColor: 'rgba(39, 39, 39, 1)' }}\r\n                containerStyle={{\r\n                    width: 200,\r\n                    marginHorizontal: 85,\r\n                    marginVertical: 10,\r\n                }}\r\n                titleStyle={{ color: 'white', marginHorizontal: 20 }}\r\n                onPress={photoFromCamera}\r\n            />\r\n              <Button\r\n                title=\"Gallary\"\r\n                buttonStyle={{ backgroundColor: 'rgba(39, 39, 39, 1)' }}\r\n                containerStyle={{\r\n                    width: 200,\r\n                    marginHorizontal: 85,\r\n                    marginVertical: 10,\r\n                }}\r\n                titleStyle={{ color: 'white', marginHorizontal: 20 }}\r\n                onPress={photoFromGallary}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n"]},"metadata":{},"sourceType":"module"}