{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Input, Icon, Button } from 'react-native-elements';\nimport { auth } from \"./firebase1\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secureText = _useState6[0],\n      setSecureText = _useState6[1];\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        props.navigation.replace('chat');\n      } else {}\n    });\n    return unsubscribe;\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"liogin\"\n    }), _jsx(Input, {\n      label: \"Mail\",\n      value: name,\n      placeholder: \"User mail\",\n      leftIcon: _jsx(Icon, {\n        type: \"material\",\n        name: \"email\"\n      }),\n      onChangeText: function onChangeText(txt) {\n        setName(txt);\n      }\n    }), _jsx(Input, {\n      label: \"Password\",\n      value: password,\n      placeholder: \"Password\",\n      secureTextEntry: secureText,\n      Icon: _jsx(Text, {\n        children: \"Show\"\n      }),\n      leftIcon: _jsx(Icon, {\n        type: \"material\",\n        name: \"lock\",\n        size: 24,\n        color: \"black\"\n      }),\n      rightIcon: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log(secureText);\n          setSecureText(!secureText);\n        },\n        children: secureText ? _jsx(Text, {\n          children: \"show\"\n        }) : _jsx(Text, {\n          children: \"hide\"\n        })\n      }),\n      onChangeText: function onChangeText(txt) {\n        setPassword(txt);\n      }\n    }), _jsxs(View, {\n      children: [_jsx(Button, {\n        title: \"Sign in\",\n        buttonStyle: {\n          backgroundColor: 'rgba(39, 39, 39, 1)'\n        },\n        containerStyle: {\n          width: 200,\n          marginHorizontal: 85,\n          marginVertical: 10\n        },\n        titleStyle: {\n          color: 'white',\n          marginHorizontal: 5\n        }\n      }), _jsx(Button, {\n        title: \"Sign Up\",\n        buttonStyle: {\n          backgroundColor: 'rgba(39, 39, 39, 1)'\n        },\n        containerStyle: {\n          width: 200,\n          marginHorizontal: 85,\n          marginVertical: 10\n        },\n        titleStyle: {\n          color: 'white',\n          marginHorizontal: 20\n        },\n        onPress: function onPress() {\n          return props.navigation.navigate('SignUp');\n        }\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["G:/React native/chatApp/Screens/LoginScreen.js"],"names":["React","useState","useEffect","Input","Icon","Button","auth","LoginScreen","props","name","setName","password","setPassword","secureText","setSecureText","unsubscribe","onAuthStateChanged","user","navigation","replace","txt","console","log","backgroundColor","width","marginHorizontal","marginVertical","color","navigate"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { View, Text, TouchableOpacity } from 'react-native'\r\nimport { Input, Icon,Button } from 'react-native-elements';\r\nimport { auth } from './firebase1';\r\n\r\nconst LoginScreen = (props) => {\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [secureText, setSecureText] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                props.navigation.replace('chat');\r\n            } else {\r\n                // No user is signed in.\r\n            }\r\n        });\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <View>\r\n            <Text>liogin</Text>\r\n            <Input\r\n            label=\"Mail\"\r\n                value={name}\r\n                placeholder='User mail'\r\n                leftIcon={\r\n                    <Icon\r\n                        type='material'\r\n                        name='email'\r\n\r\n                    />\r\n                }\r\n                onChangeText={txt => { setName(txt) }}\r\n            />\r\n            <Input\r\n            label=\"Password\"\r\n                value={password}\r\n                placeholder='Password'\r\n                secureTextEntry={secureText}\r\n                Icon={\r\n                    <Text>Show</Text>\r\n                }\r\n                leftIcon={\r\n\r\n                    <Icon\r\n\r\n                        type='material'\r\n                        name='lock'\r\n                        size={24}\r\n                        color='black'\r\n                    />\r\n                }\r\n                rightIcon={\r\n                    <TouchableOpacity onPress={() => {\r\n                        console.log(secureText)\r\n                        setSecureText(!secureText)\r\n                    }}>\r\n                        {secureText ?\r\n                            <Text>show</Text> :\r\n                            <Text>hide</Text>\r\n                        }\r\n                    </TouchableOpacity>\r\n                }\r\n                onChangeText={txt => { setPassword(txt) }}\r\n            />\r\n            <View>\r\n            <Button\r\n                title=\"Sign in\"\r\n                buttonStyle={{ backgroundColor: 'rgba(39, 39, 39, 1)' }}\r\n                containerStyle={{\r\n                  width: 200,\r\n                  marginHorizontal: 85,\r\n                  marginVertical: 10,\r\n                }}\r\n                titleStyle={{ color: 'white', marginHorizontal: 5 }}\r\n              />\r\n               <Button\r\n                title=\"Sign Up\"\r\n                buttonStyle={{ backgroundColor: 'rgba(39, 39, 39, 1)' }}\r\n                containerStyle={{\r\n                  width: 200,\r\n                  marginHorizontal: 85,\r\n                  marginVertical: 10,\r\n                }}\r\n                titleStyle={{ color: 'white', marginHorizontal: 20 }}\r\n                onPress={()=>props.navigation.navigate('SignUp')}\r\n              />\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\n"]},"metadata":{},"sourceType":"module"}