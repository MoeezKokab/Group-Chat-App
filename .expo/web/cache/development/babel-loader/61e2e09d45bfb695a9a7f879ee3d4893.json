{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useState, useCallback, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { auth, db } from \"./firebase1\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { Avatar } from 'react-native-elements/dist/avatar/Avatar';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Chat = function Chat(props) {\n  var _auth$currentUser2, _auth$currentUser3, _auth$currentUser4;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    setMessages([{\n      _id: 1,\n      text: 'Hello developer',\n      createdAt: new Date(),\n      user: {\n        _id: 2,\n        name: 'React Native',\n        avatar: 'https://placeimg.com/140/140/any'\n      }\n    }]);\n  }, []);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n    var _messages$ = messages[0],\n        _id = _messages$._id,\n        createdAt = _messages$.createdAt,\n        text = _messages$.text,\n        user = _messages$.user;\n    db.collection('chats').add({\n      _id: _id,\n      createdAt: createdAt,\n      text: text,\n      user: user\n    });\n  }, []);\n\n  useLayoutEffect(function () {\n    props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          onPress: signOut,\n          children: _jsx(AntDesign, {\n            style: {\n              marginRight: 10\n            },\n            name: \"logout\",\n            size: 24,\n            color: \"black\"\n          })\n        });\n      },\n      headerLeft: function headerLeft() {\n        var _auth$currentUser;\n\n        return _jsx(View, {\n          style: {\n            marginLeft: 15,\n            marginBottom: 15,\n            padding: 5\n          },\n          children: _jsx(Avatar, {\n            size: 44,\n            rounded: true,\n            source: {\n              uri: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.photoURL\n            }\n          })\n        });\n      }\n    });\n  }, []);\n\n  var signOut = function signOut() {\n    auth.signOut().then(function () {\n      alert('Sign-out successful');\n      props.navigation.replace('Login');\n    }).catch(function (error) {\n      alert('error');\n    });\n  };\n\n  return _jsx(GiftedChat, {\n    messages: messages,\n    showAvatarForEveryMessage: true,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: auth == null ? void 0 : (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.email,\n      name: auth == null ? void 0 : (_auth$currentUser3 = auth.currentUser) == null ? void 0 : _auth$currentUser3.displayName,\n      avatar: auth == null ? void 0 : (_auth$currentUser4 = auth.currentUser) == null ? void 0 : _auth$currentUser4.photoURL\n    }\n  });\n};\n\nexport default Chat;","map":{"version":3,"sources":["G:/React native/chatApp/Screens/Chat.js"],"names":["React","useLayoutEffect","useState","useCallback","useEffect","auth","db","AntDesign","Avatar","GiftedChat","Chat","props","messages","setMessages","_id","text","createdAt","Date","user","name","avatar","onSend","previousMessages","append","collection","add","navigation","setOptions","headerRight","signOut","marginRight","headerLeft","marginLeft","marginBottom","padding","uri","currentUser","photoURL","then","alert","replace","catch","error","email","displayName"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState, useCallback, useEffect } from 'react'\r\nimport { View, Text, TouchableOpacity } from 'react-native'\r\nimport { auth,db } from './firebase1'\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { Avatar } from 'react-native-elements/dist/avatar/Avatar';\r\nimport { GiftedChat } from 'react-native-gifted-chat'\r\n\r\nconst Chat = (props) => {\r\n\r\n\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n      setMessages([\r\n        {\r\n          _id: 1,\r\n          text: 'Hello developer',\r\n          createdAt: new Date(),\r\n          user: {\r\n            _id: 2,\r\n            name: 'React Native',\r\n            avatar: 'https://placeimg.com/140/140/any',\r\n          },\r\n        },\r\n      ])\r\n    }, [])\r\n  \r\n    const onSend = useCallback((messages = []) => {\r\n      setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\r\n      const {\r\n          _id,\r\n          createdAt,text,user\r\n      }=messages[0]\r\n      db.collection('chats').add({\r\n        _id,createdAt,text,user\r\n      })\r\n\r\n    }, [])\r\n  \r\n\r\n\r\n    useLayoutEffect(() => {\r\n        props.navigation.setOptions({\r\n            headerRight: () => (\r\n                <TouchableOpacity onPress={signOut}>\r\n\r\n                    <AntDesign style={{ marginRight: 10 }} name=\"logout\" size={24} color=\"black\" />\r\n                </TouchableOpacity>),\r\n            headerLeft: () => (<View style={{ marginLeft: 15 ,marginBottom:15,padding:5}}>\r\n                <Avatar\r\n                    size={44}\r\n                    rounded\r\n                    source={{ uri: auth?.currentUser?.photoURL }}\r\n                />\r\n\r\n            </View>)\r\n\r\n\r\n        })\r\n\r\n\r\n    }, [])\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n            // Sign-out successful.\r\n            alert('Sign-out successful')\r\n            props.navigation.replace('Login')\r\n        }).catch((error) => {\r\n            // An error happened.\r\n            alert('error')\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <GiftedChat\r\n        messages={messages}\r\n        showAvatarForEveryMessage={true}\r\n        onSend={messages => onSend(messages)}\r\n        user={{\r\n          _id: auth?.currentUser?.email,\r\n          name:auth?.currentUser?.displayName,\r\n          avatar:auth?.currentUser?.photoURL\r\n        }}\r\n      />\r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\n"]},"metadata":{},"sourceType":"module"}