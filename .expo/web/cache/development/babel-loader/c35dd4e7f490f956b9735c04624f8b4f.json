{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Input, Icon, Button } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUp = function SignUp() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setname = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mail = _useState4[0],\n      setMail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      photoURL = _useState8[0],\n      setPhotoURL = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      secureText = _useState10[0],\n      setSecureText = _useState10[1];\n\n  return _jsxs(View, {\n    children: [_jsx(Input, {\n      label: \"Name\",\n      value: name,\n      placeholder: \"User name\",\n      leftIcon: _jsx(Icon, {\n        type: \"material\",\n        name: \"badge\"\n      }),\n      onChangeText: function onChangeText(txt) {\n        setname(txt);\n      }\n    }), _jsx(Input, {\n      label: \"Mail\",\n      value: mail,\n      placeholder: \"User mail\",\n      leftIcon: _jsx(Icon, {\n        type: \"material\",\n        name: \"email\"\n      }),\n      onChangeText: function onChangeText(txt) {\n        return setMail(txt);\n      }\n    }), _jsx(Input, {\n      label: \"Password\",\n      value: password,\n      placeholder: \"password\",\n      secureTextEntry: secureText,\n      Icon: _jsx(Text, {\n        children: \"Show\"\n      }),\n      leftIcon: _jsx(Icon, {\n        type: \"material\",\n        name: \"lock\",\n        size: 24,\n        color: \"black\"\n      }),\n      rightIcon: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log(secureText);\n          setSecureText(!secureText);\n        },\n        children: secureText ? _jsx(Text, {\n          children: \"show\"\n        }) : _jsx(Text, {\n          children: \"hide\"\n        })\n      }),\n      onChangeText: function onChangeText(txt) {\n        setPassword(txt);\n      }\n    }), _jsx(Input, {\n      label: \"Profile\",\n      value: photoURL,\n      placeholder: \"User Profile\",\n      leftIcon: _jsx(Icon, {\n        type: \"material\",\n        name: \"badge\"\n      }),\n      onChangeText: function onChangeText(txt) {\n        return setPhotoURL(txt);\n      }\n    }), _jsx(Button, {\n      title: \"Sign Up\",\n      buttonStyle: {\n        backgroundColor: 'rgba(39, 39, 39, 1)'\n      },\n      containerStyle: {\n        width: 200,\n        marginHorizontal: 90,\n        marginVertical: 10\n      },\n      titleStyle: {\n        color: 'white',\n        marginHorizontal: 20\n      }\n    })]\n  });\n};\n\nexport default SignUp;","map":{"version":3,"sources":["G:/React native/chatApp/Screens/SignUp.js"],"names":["React","useState","Input","Icon","Button","SignUp","name","setname","mail","setMail","password","setPassword","photoURL","setPhotoURL","secureText","setSecureText","txt","console","log","backgroundColor","width","marginHorizontal","marginVertical","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, TouchableOpacity } from 'react-native'\r\nimport { Input, Icon, Button } from 'react-native-elements'\r\n\r\nconst SignUp = () => {\r\n    const [name, setname] = useState('')\r\n    const [mail, setMail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [photoURL, setPhotoURL] = useState('')\r\n    const [secureText, setSecureText] = useState(true)\r\n    return (\r\n        <View>\r\n            <Input\r\n                label=\"Name\"\r\n                value={name}\r\n                placeholder='User name'\r\n                leftIcon={\r\n                    <Icon\r\n                        type='material'\r\n                        name='badge'\r\n\r\n                    />\r\n                }\r\n                onChangeText={txt => { setname(txt) }}\r\n            />\r\n            <Input\r\n                label=\"Mail\"\r\n                value={mail}\r\n                placeholder='User mail'\r\n                leftIcon={\r\n                    <Icon\r\n                        type='material'\r\n                        name='email'\r\n\r\n                    />\r\n                }\r\n                onChangeText={txt => setMail(txt)}\r\n            />\r\n            <Input\r\n                label=\"Password\"\r\n                value={password}\r\n                placeholder='password'\r\n                secureTextEntry={secureText}\r\n                Icon={\r\n                    <Text>Show</Text>\r\n                }\r\n                leftIcon={\r\n\r\n                    <Icon\r\n\r\n                        type='material'\r\n                        name='lock'\r\n                        size={24}\r\n                        color='black'\r\n                    />\r\n                }\r\n                rightIcon={\r\n                    <TouchableOpacity onPress={() => {\r\n                        console.log(secureText)\r\n                        setSecureText(!secureText)\r\n                    }}>\r\n                        {secureText ?\r\n                            <Text>show</Text> :\r\n                            <Text>hide</Text>\r\n                        }\r\n                    </TouchableOpacity>\r\n                }\r\n                onChangeText={txt => { setPassword(txt) }}\r\n            />\r\n            <Input\r\n                label=\"Profile\"\r\n                value={photoURL}\r\n                placeholder='User Profile'\r\n                leftIcon={\r\n                    <Icon\r\n                        type='material'\r\n                        name='badge'\r\n\r\n                    />\r\n                }\r\n                onChangeText={txt => setPhotoURL(txt)}\r\n            />\r\n            <Button\r\n                title=\"Sign Up\"\r\n                buttonStyle={{ backgroundColor: 'rgba(39, 39, 39, 1)' }}\r\n                containerStyle={{\r\n                  width: 200,\r\n                  marginHorizontal: 90,\r\n                  marginVertical: 10,\r\n                }}\r\n                titleStyle={{ color: 'white', marginHorizontal: 20 }}\r\n              />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n"]},"metadata":{},"sourceType":"module"}